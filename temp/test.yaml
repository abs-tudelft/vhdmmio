# rm temp/output/*.vhd; python3 -m vhdmmio temp/test.yaml && vhdeps ghdl -i temp/output

meta:
  mnemonic: SSP
  name: serial
  doc: |
    This is mostly copypasted from the user manual of the SSP controller of
    the LPC1313 microcontroller (NXP UM10375) to serve as a real-world example
    of a register file description.

features:
  bus-width: 32
  optimize: yes

interface:
  port-group: no
  port-flatten: yes

interrupts:

  - mnemonic: RO
    name: rx_overrun
    interface:
      port-group: irq
    brief: Receive overrun.
    doc: |
      This interrupt occurs when the Rx FIFO is full and another frame is
      completely received.

  - mnemonic: RT
    name: rx_timeout
    interface:
      port-group: irq
    brief: Receive timeout.
    doc: |
      This interrupt occurs when the Rx FIFO is not empty, and has not been read
      for a time-out period.

  - mnemonic: RX
    name: rx_half_full
    interface:
      port-group: irq
    brief: Rx FIFO half full.
    doc: |
      This interrupt occurs when the Rx FIFO is at least half full.

  - mnemonic: TX
    name: tx_half_empty
    interface:
      port-group: irq
    brief: Tx FIFO half empty.
    doc: |
      This interrupt occurs when the Tx FIFO is at least half empty.

fields:

  - base: 0x0000
    register-name: CR0
    register-brief: SSP Control Register 0.
    register-doc: |
      This register controls the basic operation of the SSP controller.

    type: control
    interface:
      port-group: control

    subfields:
      - address: 0:3..0
        mnemonic: DSS
        name: data_size_select
        brief: Data Size Select.
        doc: |
          This field controls the number of bits transferred in each frame. Values
          0000-0010 are not supported and should not be used.

          | Value | Description     |
          |-------|-----------------|
          | 0x3   | 4-bit transfer  |
          | 0x4   | 5-bit transfer  |
          | 0x5   | 6-bit transfer  |
          | 0x6   | 7-bit transfer  |
          | 0x7   | 8-bit transfer  |
          | 0x8   | 9-bit transfer  |
          | 0x9   | 10-bit transfer |
          | 0xA   | 11-bit transfer |
          | 0xB   | 12-bit transfer |
          | 0xC   | 13-bit transfer |
          | 0xD   | 14-bit transfer |
          | 0xE   | 15-bit transfer |
          | 0xF   | 16-bit transfer |

      - address: 0:5..4
        mnemonic: FRF
        name: frame_format
        brief: Frame Format.
        doc: |
          | Value | Description   |
          |-------|---------------|
          | 0x0   | SPI           |
          | 0x1   | TI            |
          | 0x2   | Microwire     |
          | 0x3   | Not supported |

      - address: 0:6
        mnemonic: CPOL
        name: clock_polarity
        brief: Clock Out Polarity.
        doc: |
          This bit is only used in SPI mode.

          When 0, the SSP controller maintains the bus clock low between frames.

          When 1, the SSP controller maintains the bus clock high between frames.

      - address: 0:7
        mnemonic: CPHA
        name: clock_phase
        brief: Clock Out Phase.
        doc: |
          This bit is only used in SPI mode.

          When 0, the SSP controller captures serial data on the first clock
          transition of the frame, that is, the transition *away from* the inter
          frame state of the clock line.

          When 1, the SSP controller captures serial data on the second clock
          transition of the frame, that is, the transition back to the inter-frame
          state of the clock line.

      - address: 0:15..8
        mnemonic: SCR
        name: prescaler_b
        brief: Serial Clock Rate.
        doc: |
          The number of prescaler-output clocks per bit on the bus, minus one.
          Given that CPSDVSR is the prescale divider, and the APB clock PCLK clocks
          the prescaler, the bit frequency is PCLK / (CPSDVSR x [SCR+1]).

  - base: 0x0004
    register-name: CR1
    register-brief: SSP Control Register 1.
    register-doc: |
      This register controls certain aspects of the operation of the SSP
      controller.

    type: control
    interface:
      port-group: control

    subfields:
      - address: 0:0
        mnemonic: LBM
        name: loopback
        brief: Loop Back Mode.
        doc: |
          When 0, the SSP behaves normally. When 1, serial input is taken from the
          serial output (MOSI or MISO) rather than the serial input pin (MISO or MOSI
          respectively).

      - address: 0:1
        mnemonic: SSE
        name: enable
        brief: SSP Enable.
        doc: |
          When 0, the SSP is disabled. When 1, the SSP controller will interact with
          other devices on the serial bus. Software should write the appropriate
          control information to the other SSP registers and interrupt controller
          registers, before setting this bit.

      - address: 0:2
        mnemonic: MS
        name: mode
        brief: Master/Slave Mode.
        doc: |
          This bit can only be written when the SSE bit is 0. When 0, the SSP
          controller acts as a master on the bus, driving the SCLK, MOSI, and SSEL
          lines and receiving the MISO line. When 1, the SSP controller acts as a
          slave on the bus, driving MISO line and receiving SCLK, MOSI, and SSEL
          lines.

        ctrl-lock: yes

      - address: 0:3
        mnemonic: SOD
        name: output_disable
        brief: Slave Output Disable.
        doc: |
          This bit is relevant only in slave mode (MS = 1). If it is 1, this blocks
          this SSP controller from driving the transmit data line (MISO).

  - address: 0x0008:15..0
    register-name: DR
    register-brief: SSP Data Register.
    register-doc: |
      Software can write data to be transmitted to this register, and read data
      that has been received.

    interface:
      port-flatten: yes

    subfields:
      - type: mmio-to-stream
        bus-write: invalid-only
        mnemonic: PUSH
        name: push
        brief: Pushes data into the Tx FIFO.
        doc: |
          Software can write data to be sent in a future frame to this register
          whenever the TNF bit in the Status register is 1, indicating that the Tx
          FIFO is not full. If the Tx FIFO was previously empty and the SSP
          controller is not busy on the bus, transmission of the data will begin
          immediately. Otherwise the data written to this register will be sent as
          soon as all previous data has been sent (and received). If the data length
          is less than 16 bit, software must right-justify the data written to this
          register.

      - type: stream-to-mmio
        bus-read: valid-only
        mnemonic: POP
        name: pop
        brief: Pops data from the Rx FIFO.
        doc: |
          Software can read data from this register whenever the RNE bit in the
          Status register is 1, indicating that the Rx FIFO is not empty. When
          software reads this register, the SSP controller returns data from the
          least recent frame in the Rx FIFO. If the data length is less than 16 bit,
          the data is right-justified in this field with higher order bits filled
          with 0s.

  - base: 0x000C
    register-name: SR
    register-brief: SSP Status Register.
    register-doc:
      This read-only register reflects the current status of the SSP controller.

    type: status
    interface:
      port-group: status

    subfields:
      - address: 0:0
        mnemonic: TFE
        name: tx_fifo_empty
        brief: Transmit FIFO Empty.
        doc: |
          This bit is 1 if the Transmit FIFO is empty, 0 if not.

      - address: 0:1
        mnemonic: TNF
        name: tx_fifo_not_full
        brief: Transmit FIFO Not Full.
        doc: |
          This bit is 0 if the Tx FIFO is full, 1 if not.

      - address: 0:2
        mnemonic: RNE
        name: rx_fifo_not_empty
        brief: Receive FIFO Not Empty.
        doc: |
          This bit is 0 if the Receive FIFO is empty, 1 if not.

      - address: 0:3
        mnemonic: RFF
        name: rx_fifo_full
        brief: Receive FIFO Full.
        doc: |
          This bit is 1 if the Receive FIFO is full, 0 if not.

      - address: 0:4
        mnemonic: BSY
        name: busy
        brief: Busy.
        doc: |
          This bit is 0 if the SSP controller is idle, or 1 if it is currently
          sending/receiving a frame and/or the Tx FIFO is not empty.

  - base: 0x0010
    register-name: CPSR
    register-brief: SSP Clock Prescale Register.
    register-doc: |
      This register controls the factor by which the Prescaler divides the SSP
      peripheral clock SSP_PCLK to yield the prescaler clock that is, in turn,
      divided by the SCR factor in CR0, to determine the bit clock.

      *Important:* the CPSR value must be properly initialized or the SSP
      controller will not be able to transmit data correctly.

      In Slave mode, the SSP clock rate provided by the master must not exceed
      1/12 of the SSP peripheral clock selected in Table 26 or Table 28. The
      content of the CPSR register is not relevant.

      In master mode, CPSDVSRmin = 2 or larger (even numbers only).

    type: control
    ctrl-bit-clear: yes
    interface:
      port-group: control

    subfields:
      - address: 0:7..0
        mnemonic: CPSDVSR
        name: prescaler_a
        brief: Prescaler value.
        doc: |
          This even value between 2 and 254, by which SSP_PCLK is divided to yield
          the prescaler output clock. Bit 0 always reads as 0.

  - base: 0x0014
    register-name: IMSC
    register-brief: SSP Interrupt Mask Set/Clear Register.
    register-doc: |
      This register controls whether each of the four possible interrupt
      conditions in the SSP controller are enabled. Note that ARM uses the word
      “masked” in the opposite sense from classic computer terminology, in which
      “masked” meant “disabled”. ARM uses the word “masked” to mean “enabled”. To
      avoid confusion we will not use the word “masked”.

    type: interrupt-unmask

    subfields:
      - address: 0:0
        interrupt: rx_overrun
        name: rorim
        brief: Receive overrun interrupt enable.
        doc: |
          Software should set this bit to enable interrupt when a Receive Overrun
          occurs, that is, when the Rx FIFO is full and another frame is completely
          received. The ARM spec implies that the preceding frame data is overwritten
          by the new frame data when this occurs.

      - address: 0:1
        interrupt: rx_timeout
        name: rtim
        brief: Receive timeout interrupt enable.
        doc: |
          Software should set this bit to enable interrupt when a Receive Time-out
          condition occurs. A Receive Time-out occurs when the Rx FIFO is not empty,
          and no has not been read for a time-out period. The time-out period is the
          same for master and slave modes and is determined by the SSP bit rate: 32
          bits at PCLK / (CPSDVSR x [SCR+1]).

      - address: 0:2
        interrupt: rx_half_full
        name: rxim
        brief: Rx FIFO half-full interrupt enable.
        doc: |
          Software should set this bit to enable interrupt when the Rx FIFO is
          atleast half full.

      - address: 0:3
        interrupt: tx_half_empty
        name: txim
        brief: Tx FIFO half-empty interrupt enable.
        doc: |
          Software should set this bit to enable interrupt when the Tx FIFO is
          atleast half empty.

  - base: 0x0018
    register-name: RIS
    register-brief: SSP Raw Interrupt Status Register.
    register-doc: |
      This read-only register contains a 1 for each interrupt condition that is
      asserted, regardless of whether or not the interrupt is enabled in the
      IMSC.

    type: interrupt-status

    subfields:
      - address: 0:0
        interrupt: rx_overrun
        name: rorris
        brief: Receive overrun raw interrupt status.
        doc: |
          This bit is 1 if another frame was completely received while the Rx FIFO
          was full. The ARM spec implies that the preceding frame data is overwritten
          by the new frame data when this occurs.

      - address: 0:1
        interrupt: rx_timeout
        name: rtris
        brief: Receive timeout raw interrupt status.
        doc: |
          This bit is 1 if the Rx FIFO is not empty, and has not been read for a
          time-out period. The time-out period is the same for master and slave modes
          and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).

      - address: 0:2
        interrupt: rx_half_full
        name: rxris
        brief: Rx FIFO half-full raw interrupt status.
        doc: |
          This bit is 1 if the Rx FIFO is at least half full.

      - address: 0:3
        interrupt: tx_half_empty
        name: txris
        brief: Tx FIFO half-empty raw interrupt status.
        doc: |
          This bit is 1 if the Tx FIFO is at least half empty.

  - base: 0x001C
    register-name: MIS
    register-brief: SSP Masked Interrupt Status Register.
    register-doc: |
      This read-only register contains a 1 for each interrupt condition that is
      asserted, regardless of whether or not the interrupt is enabled in the
      IMSC.

    type: interrupt-flag

    subfields:
      - address: 0:0
        interrupt: rx_overrun
        name: rormis
        brief: Receive overrun masked interrupt status.
        doc: |
          This bit is 1 if another frame was completely received while the Rx FIFO
          was full, and this interrupt is enabled.

      - address: 0:1
        interrupt: rx_timeout
        name: rtmis
        brief: Receive timeout masked interrupt status.
        doc: |
          This bit is 1 if the Rx FIFO is not empty, has not been read for a time-out
          period, and this interrupt is enabled. The time-out period is the same for
          master and slave modes and is  determined by the SSP bit rate: 32 bits at
          PCLK / (CPSDVSR x [SCR+1]).

      - address: 0:2
        interrupt: rx_half_full
        name: rxmis
        brief: Rx FIFO half-full masked interrupt status.
        doc: |
          This bit is 1 if the Rx FIFO is at least half full, and this interrupt is
          enabled.

      - address: 0:3
        interrupt: tx_half_empty
        name: txmis
        brief: Tx FIFO half-empty masked interrupt status.
        doc: |
          This bit is 1 if the Tx FIFO is at least half empty, and this interrupt is
          enabled.

  - base: 0x0020
    register-name: ICR
    register-brief: SSP Interrupt Clear Register.
    register-doc: |
      Software can write one or more one(s) to this write-only register, to clear
      the corresponding interrupt condition(s) in the SSP controller. Note that
      the other two interrupt conditions can be cleared by writing or reading the
      appropriate FIFO, or disabled by clearing the corresponding bit in IMSC.

    type: interrupt-flag-cow
    read: disabled

    subfields:
      - address: 0:0
        interrupt: rx_overrun
        name: roric
        brief: Receive overrun interrupt clear.
        doc: |
          Writing a 1 to this bit clears the “frame was received when Rx FIFO was
          full” interrupt.

      - address: 0:1
        interrupt: rx_timeout
        name: rtic
        brief: Receive timeout interrupt clear.
        doc: |
          Writing a 1 to this bit clears the Rx FIFO was not empty and has not been
          read-bit for a time-out period interrupt. The time-out period is the same
          for master and slave modes and is determined by the SSP bit rate: 32 bits
          at PCLK / (CPSDVSR x [SCR+1]).
